bind r source-file ~/.tmux.conf \; display-message 'Reloaded tmux.conf'
set -g base-index 1
set-window-option -g mode-keys vi
set -g mouse on
bind-key v split-window -h
bind-key s split-window -v
set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

bind-key T swap-window -t 1
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1


# # Vim pane selection
# bind-key C-h select-pane -L
# bind-key C-l select-pane -R
# bind-key C-k select-pane -U
# bind-key C-j select-pane -D

# vim pane resize
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# # Vim style pane selection
# bind -n C-h select-pane -L
# bind -n C-j select-pane -D
# bind -n C-k select-pane -U
# bind -n C-l select-pane -R

set-option -g allow-rename off
set-option -g renumber-windows on

bind P paste-buffer

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

bind -n C-s setw synchronize-panes

# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-k" "select-pane -U"
# bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-j" "select-pane -D"
# bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-h" "select-pane -L"
# bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-l" "select-pane -R"

# is_vim_pane="[ '#{pane_title}' == 'vim' ]"
# bind-key -n C-h if-shell "$is_vim_pane" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim_pane" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim_pane" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim_pane" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim_pane" "send-keys C-\\" "select-pane -l"

set-option -g set-titles on

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_title} #{window_name}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_title} #{window_name}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_title} #{window_name}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_title} #{window_name}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_title} #{window_name}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
